---
import type { Website } from '../types/website';

interface Props {
  websiteData: Website;
}

const { websiteData } = Astro.props;
---

<footer>
  <div>
    <section aria-label="About This Site">
      <h2>About This Site</h2>
      <dl>
        <dt>Language</dt>
        <dd>{websiteData.inLanguage}</dd>
        <dt>Version</dt>
        <dd>{websiteData.version}</dd>
        {websiteData.datePublished && (
          <>
            <dt>Published</dt>
            <dd><time datetime={websiteData.datePublished}>{new Date(websiteData.datePublished).toLocaleDateString()}</time></dd>
          </>
        )}
        {websiteData.dateModified && (
          <>
            <dt>Last Modified</dt>
            <dd><time datetime={websiteData.dateModified}>{new Date(websiteData.dateModified).toLocaleDateString()}</time></dd>
          </>
        )}
        {websiteData.publisher && (
          <>
            <dt>Publisher</dt>
            <dd>
              {websiteData.publisher.url ? (
                <a href={websiteData.publisher.url}>{websiteData.publisher.name}</a>
              ) : (
                websiteData.publisher.name
              )}
            </dd>
          </>
        )}
      </dl>
    </section>

    <section aria-label="Site Author">
      {websiteData.author && (
        <div>
          <h2>Author</h2>
          <p>{websiteData.author.name}</p>
          {websiteData.author.url && (
            <a href={websiteData.author.url}>Author's Website</a>
          )}
        </div>
      )}

      {websiteData.license && (
        <div>
          <h3>License</h3>
          <p>{websiteData.license}</p>
        </div>
      )}
    </section>

    {websiteData.accessibilitySummary && (
      <section aria-label="Accessibility">
        <h2>Accessibility</h2>
        <p>{websiteData.accessibilitySummary}</p>
      </section>
    )}

    {websiteData.sameAs && websiteData.sameAs.length > 0 && (
      <section aria-label="Social Media">
        <h2>Connect</h2>
        <ul class="social-links">
          {websiteData.sameAs.map((url) => {
            // Extract domain for display
            const domain = new URL(url).hostname.replace('www.', '');
            return (
              <li>
                <a href={url} target="_blank" rel="noopener noreferrer">
                  {domain}
                </a>
              </li>
            );
          })}
        </ul>
      </section>
    )}
  </div>
</footer>

<style>
  footer {
    padding: 2rem;
    background: var(--color-background-alt);
  }

  footer > div {
    max-width: var(--max-width);
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  h2 {
    font-size: 1.25rem;
    margin: 0;
  }

  dl {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 0.5rem 1rem;
    margin: 0;
  }

  dt {
    font-weight: bold;
  }

  dd {
    margin: 0;
  }

  .social-links {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .social-links a {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: var(--color-background);
    border-radius: 0.25rem;
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .social-links a:hover {
    background: var(--color-background-hover);
  }
</style> 